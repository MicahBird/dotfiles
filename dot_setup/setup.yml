- name: "Install Software and Setup"
  hosts: localhost
  connection: local
  gather_facts: true
  tasks:

  # - name: Add .local/bin to bashrc PATH
  #   ansible.builtin.blockinfile:
  #     path: ~/.bashrc
  #     marker: "# Managed by Ansible"
  #     insertafter: "EOF"
  #     block: |
  #       # User specific environment
  #       if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
  #       then
  #           PATH="$HOME/.local/bin:$HOME/bin:$PATH"
  #       fi
  #       export PATH

  - name: Update Packages (Debian)
    when: ansible_os_family == "Debian"
    become: yes
    apt:
      update_cache: yes
      upgrade: yes

  - name: Install Packages
    become: yes 
    ansible.builtin.package:
      name:
        - python3
        - zsh-autosuggestions
        - htop
        - tmux
        - neovim
        - autojump
        - kitty
        - zsh
        - neovim
        - zsh-syntax-highlighting
        - zsh-autosuggestions
        - cmus
        - fzf
        - bat
        - trash-cli
        - imagemagick
        - apt-transport-https 
        - ca-certificates 
        - curl 
        - gnupg
        - gcc
        - cmake
        - make
        - cargo
        # CLI Tools
        - cmus
        - fzf
        - bat
        - jq
        - fzf
        - ffmpeg
        - exiftool
        - ripgrep
        - scrcpy
        - espeak
        - aria2
        - p7zip
        - hugo
        - tree
        - zstd
        - rclone
        - tty-clock
        - watch
        - mpv
        - ffmpeg
        - fonts-font-awesome
        - hugo
        - foot
        # - tesseract
        # - tesseract-lang
        - trash-cli
        # Apps
        - syncthing
        - qalculate-gtk
        - mpv
        # Others
        - hunspell
        - sway
        - swaylock
        - swayidle
        - waybar
        - wl-clipboard
        - slurp # Tools for screenshots
        - grim # Tools for screenshots
        # Linux utils
        - flatpak
        - gimp
      state: latest
  
  # Install packages with certain name on Debian
  - name: Install Debian Specific Packages
    become: yes
    when: ansible_os_family == "Debian"
    ansible.builtin.apt:
      name:
        - nodejs
        - build-essential
        - default-jdk
        - libimage-exiftool-perl
        - flatpak
        - flatpak-xdg-utils
        - xdg-desktop-portal
      state: latest

  # Install other packages not available in the default Ubuntu repos
  - name: Ensure /etc/apt/keyrings directory exists
    when: ansible_os_family == "Debian"
    become: yes
    ansible.builtin.file:
      path: /etc/apt/keyrings
      state: directory
      owner: root
      mode: '755'

  - name: Ensure Visual Studio Code gpg key is in place
    when: ansible_os_family == "Debian"
    become: yes
    ansible.builtin.get_url:
      url: 'https://packages.microsoft.com/keys/microsoft.asc'
      dest: /etc/apt/keyrings/packages.microsoft.asc
      owner: root
      group: root
      mode: '644'

  - name: Ensure Visual Studio Code repository exists
    when: ansible_os_family == "Debian"
    become: yes
    ansible.builtin.apt_repository:
      repo: 'deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.asc] https://packages.microsoft.com/repos/code stable main'
      filename: vscode.list

  - name: Ensure K8s gpg key is in place
    when: ansible_os_family == "Debian"
    become: yes
    ansible.builtin.get_url:
      url: 'https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key'
      dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      owner: root
      group: root
      mode: '644'

  - name: Ensure K8s repository exists
    when: ansible_os_family == "Debian"
    become: yes
    ansible.builtin.apt_repository:
      repo: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ all main'
      filename: kubernetes.list

  - name: Ensure Helm gpg key is in place
    when: ansible_os_family == "Debian"
    become: yes
    ansible.builtin.get_url:
      url: 'https://baltocdn.com/helm/signing.asc'
      dest: /usr/share/keyrings/helm.gpg
      owner: root
      group: root
      mode: '644'

  - name: Ensure Helm repository exists
    when: ansible_os_family == "Debian"
    become: yes
    ansible.builtin.apt_repository:
      repo: 'deb [arch=amd64,arm64,armhf signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main'
      filename: helm.list

  - name: Update Package list
    when: ansible_os_family == "Debian"
    become: yes
    apt:
      update_cache: yes

  - name: Install Other Repo Debian Specific Packages
    become: yes
    when: ansible_os_family == "Debian"
    ansible.builtin.apt:
      name:
        - kubectl
        - code
        - helm
      state: latest
  
  - name: Change shell to zsh
    ansible.builtin.user:
     name: "{{ ansible_user_id }}"
     shell: /usr/bin/zsh 

  - name: Check Latest k9s
    uri:
      url: https://api.github.com/repos/derailed/k9s/releases/latest
      return_content: true
    register: k9s_latest
    tags:
      - k9s

  - name: "Installing k9s {{ k9s_latest.json.tag_name }}"
    loop: "{{ k9s_latest.json.assets }}"
    when: "'k9s_Linux_x86_64.tar.gz' in item.name"
    unarchive:
      remote_src: yes
      src: "{{ item.browser_download_url }}"
      dest: "{{ ansible_env.HOME }}/.local/bin/"
      keep_newer: yes
    tags:
      - k9s

  - name: Add the flathub flatpak repository remote
    community.general.flatpak_remote:
      name: flathub
      state: present
      flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

  - name: Install Flatpak Packages
    community.general.flatpak:
      name:
        - io.gitlab.librewolf-community
        - io.github.ungoogled_software.ungoogled_chromium
        - com.usebottles.bottles
        - com.obsproject.Studio

  - name: Install Rust packages
    community.general.cargo:
      name: 
      - autotiling-rs
      - fclones
      - uv
      path: "{{ ansible_user_dir }}/.local"
      
      # NEED TO ADD INSTALL FOR lf, k9s, dua-cli