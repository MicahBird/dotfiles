# Basic Settings
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/lf-kitty-clean
set preview true
set hidden true
set drawbox true
set icons true
set period 1
set ignorecase true

# Custom Functions
# cmd open ${{
#     case $(file --mime-type "$(readlink -f $f)" -b) in
# 	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
#         text/*|application/json|inode/x-empty) $EDITOR $fx;;
#         text/plain) $EDITOR $fx;;
# 	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
# 	image/svg+xml) display -- $f ;;
# 		setsid -f sxiv -aio 2>/dev/null | while read -r file; do
# 			[ -z "$file" ] && continue
# 			lf -remote "send select \"$file\""
# 			lf -remote "send toggle"
# 		done &
# 		;;
# 	audio/*) mpv --audio-display=no $f ;;
# 	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
#         *) for f in $fx; do setsid -f xdg-open "$f" >/dev/null 2>&1; done;;
#     esac
# }}
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/markdown) nvim -u ~/.config/nvim/winit.vim  "$f";;
        text/plain) nvim -u ~/.config/nvim/winit.vim  "$f";;
        text/*|application/json) $EDITOR "$f";;
	audio/*) mpv --audio-display=no "$f" ;;
	video/*) setsid -f mpv "$f" -quiet >/dev/null 2>&1 ;;
        *) xdg-open "$f" ;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

# cmd mkdir ${{ mkdir -p "$(echo $* | tr ' ' '\ ')" }}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done

  lf -remote 'send reload'
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd setwallpaper %cp "$f" ~/.config/wall.png && xwallpaper --zoom "$f"

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd open_config  ${{
  $EDITOR $(bookmenu -b ~/.config/bookmenu/configs -f fzf -o)
}}

cmd dragon %dragon-drag-and-drop -a -x $fx
cmd dragon-stay %dragon-drag-and-drop -a $fx
cmd dragon-individual %dragon-drag-and-drop $fx
cmd cpdragon %cpdragon
cmd mvdragon %mvdragon
cmd dlfile %dlfile

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Trash cli bindings
cmd trash %trash "$f"

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

cmd stripspace %stripspace "$f"

cmd bulk-rename ${{
    old="$(mktemp)"
    new="$(mktemp)"
    if [ -n "$fs" ]; then
        fs="$(basename -a $fs)"
    else
        fs="$(ls)"
    fi
    printf '%s\n' "$fs" >"$old"
    printf '%s\n' "$fs" >"$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
    paste "$old" "$new" | while IFS= read -r names; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

# File Openers
map ee $$EDITOR "$f"
map u $view "$f"

# Archive Mappings
map az zip
map at tar
map ag targz
map ab targz
map au unarchive

# Trash Mappings
map dd trash
map tc clear_trash
map tr restore_trash

# Broot Mapping
map f broot_jump

# Dragon Mapping
map dr dragon
map ds dragon-stay
map di dragon-individual
map dm mvdragon
map dc cpdragon
map dl dlfile

map ss stripspace

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
map ms $mkscript
map ch chmod
map bg setwallpaper
map o open_config
map br $vimv $fx
map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect

# Map CTRL-F to search current dir with fzf
map <c-f> $lf -remote "send $id select \"$(fzf)\""

# Movement
map gtr cd ~/.local/share/Trash/files
map gus cd /run/media/brodie

map gv. cd ~/videos
map gva cd ~/videos/anime

map gy. cd ~/videos/youtube
map gyt cd ~/videos/youtube/ToUpload
map gyu cd ~/videos/youtube/Uploaded
map gya cd ~/videos/youtube/asset
map go. cd ~/videos/podcast
map got cd ~/videos/podcast/ToUpload
map gou cd ~/videos/podcast/Uploaded

map gp. cd ~/pictures
map gpm cd ~/pictures/mpvscreenshots
map gpa cd ~/pictures/Anime
map gps cd ~/pictures/screenshots

map gw. cd ~/pictures/Wallpapers
map gww cd ~/pictures/Wallpapers/Wallpapers
map gwm cd ~/pictures/Wallpapers/MobileWallpapers

map gt. cd ~/documents/Textbooks
map gt1 cd ~/documents/Textbooks/1stYear
map gt2 cd ~/documents/Textbooks/2ndYear
map gt3 cd ~/documents/Textbooks/3rdYear
map gu3 cd ~/documents/Uni/3rdYear
map gd cd ~/documents

map gD cd ~/downloads
map ge cd ~/desktop

map gs. cd ~/scripts
map gsl cd ~/scripts/lf
map gsa cd ~/scripts/alsa
map gsi cd ~/scripts/i3
map gse cd ~/scripts/lemonbar
map gsp cd ~/scripts/polybar
map gsb cd ~/scripts/bspwm
map gsu cd ~/scripts/pulse
map gdt cd ~/scripts/transmission

map gr. cd ~/repos
map grb cd ~/repos/bookmenu
map grf cd ~/repos/cleanfullscreen
map grm cd ~/repos/dmenu
map grd cd ~/repos/dotfiles
map gri cd ~/repos/init
map grk cd ~/repos/kanban-board
map grl cd ~/repos/lbryurlconvert
map grP cd ~/repos/PerlProjects
map grr cd ~/repos/reading-list
map grs cd ~/repos/st
map grw cd ~/repos/website

map gc cd ~/.config
map gC cd ~/.local/share/cell
map gl cd ~/.local
map gE cd /etc
map gU. cd /usr
map gUs cd /usr/share

map \;j cd ~
